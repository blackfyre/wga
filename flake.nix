# This flake was initially generated by fh, the CLI for FlakeHub (version 0.1.8)
{
  # A helpful description of your flake
  description = "Whiskies gallery";

  # Flake inputs
  inputs = {
    flake-schemas.url = "https://flakehub.com/f/DeterminateSystems/flake-schemas/*.tar.gz";

    nixpkgs.url = "https://flakehub.com/f/NixOS/nixpkgs/*.tar.gz";

    # nix run github:a-h/templ
    templ = {
      url = "github:a-h/templ";
      inputs.nixpkgs.follows = "nixpkgs";
    };

    # gomod2nix = {
    #   url = "github:nix-community/gomod2nix";
    #   inputs.nixpkgs.follows = "nixpkgs";
    # };

  };

  # Flake outputs that other flakes can use
  outputs = { self, flake-schemas, nixpkgs, templ }:
    let
      # Helpers for producing system-specific outputs
      supportedSystems = [ 
        "x86_64-linux" # 64-bit Intel/AMD Linux
        "aarch64-linux" # 64-bit ARM Linux
        "x86_64-darwin" # 64-bit Intel macOS
        "aarch64-darwin" # 64-bit ARM macOS
       ];
      forEachSupportedSystem = f: nixpkgs.lib.genAttrs supportedSystems (system: f {
        pkgs = import nixpkgs { inherit system; };
      });
    in {
      # Schemas tell Nix about the structure of your flake's outputs
      schemas = flake-schemas.schemas;

      # Development environments
      devShells = forEachSupportedSystem ({ pkgs }: {
        default = pkgs.mkShell {
          # Pinned packages available in the environment
          packages = with pkgs; [
            go
            air
            goreleaser
            gopls
            gotools
            go-tools
            templ.packages.${system}.templ
            nodejs-18_x
            bun
            gnumake
            curl
            git
            jq
            wget
            flyctl
            nixpkgs-fmt
            zstd
          ];

          # Environment variables
          env = {
            TESTVAR = "123TEST";
          };

          # A hook run every time you enter the environment
          shellHook = ''
            testhook
          '';
        };
      });
    };
}
