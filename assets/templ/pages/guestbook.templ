package pages

import (
	"github.com/blackfyre/wga/assets/templ/layouts"
	"github.com/blackfyre/wga/models"
	"crypto/md5"
	"fmt"
)

type GuestbookView struct {
	SelectedYear string
	YearOptions  []string
	Entries      []*models.GuestbookEntry
}

templ GuestbookPage(v GuestbookView) {
	@layouts.LayoutMain() {
		@GuestbookBlock(v)
	}
}

templ GuestbookBlock(v GuestbookView) {
	<section class="container">
		<nav class="flex mb-6" aria-label="Breadcrumb">
			<ol role="list" class="flex items-center space-x-4">
				<li>
					<div>
						<a href="/" hx-get="/" class="text-gray-400 hover:text-gray-500">
							<svg class="h-5 w-5 flex-shrink-0" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
								<path fill-rule="evenodd" d="M9.293 2.293a1 1 0 011.414 0l7 7A1 1 0 0117 11h-1v6a1 1 0 01-1 1h-2a1 1 0 01-1-1v-3a1 1 0 00-1-1H9a1 1 0 00-1 1v3a1 1 0 01-1 1H5a1 1 0 01-1-1v-6H3a1 1 0 01-.707-1.707l7-7z" clip-rule="evenodd"></path>
							</svg>
							<span class="sr-only">Home</span>
						</a>
					</div>
				</li>
				<li>
					<div class="flex items-center">
						<svg class="h-5 w-5 flex-shrink-0 text-gray-400" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
							<path fill-rule="evenodd" d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z" clip-rule="evenodd"></path>
						</svg>
						<a href="/guestbook" hx-get="/guestbook" class="ml-4 text-sm font-medium text-gray-500 hover:text-gray-700">Guestbook</a>
					</div>
				</li>
				<li>
					<div class="flex items-center">
						<svg class="h-5 w-5 flex-shrink-0 text-gray-400" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
							<path fill-rule="evenodd" d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z" clip-rule="evenodd"></path>
						</svg>
						<a href={ templ.URL("/guestbook?year=" + v.SelectedYear) } hx-get={ "/guestbook?year=" + v.SelectedYear } class="ml-4 text-sm font-medium text-gray-500 hover:text-gray-700" aria-current="page">{ v.SelectedYear }</a>
					</div>
				</li>
			</ol>
		</nav>
		<h1 class="text-xl mb-6">Guestbook</h1>
		<p class="mb-4">Take a moment to leave your mark in our online gallery's guestbookâ€”your thoughts, reflections, and feedback add depth and richness to our community's experience with art. </p>
		<div class="flex flex-row justify-between items-center mb-6">
			<div>
				<a
					href="#"
					hx-get="/guestbook/add"
					hx-on="click: wga.openDialog()"
					hx-target="#d"
					hx-select="section.container"
					hx-swap="innerHTML"
					class="btn btn-primary"
				>Add Entry</a>
			</div>
			<div>
				<select
					title="Select a year to filter the guestbook entries"
					name="year"
					hx-get="/guestbook"
					class="select select-bordered w-full "
				>
					for _, year := range v.YearOptions {
						<option value={ year } selected?={ v.SelectedYear == year }>{ year }</option>
					}
				</select>
			</div>
		</div>
		if len(v.Entries) > 0 {
			@GuestbookEntries(v.Entries)
		} else {
			<div role="alert" class="alert alert-info">
				<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" class="stroke-current shrink-0 w-6 h-6"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path></svg>
				<p>No entries found</p>
				<p>Be the first to sign the guestbook for { v.SelectedYear }!</p>
			</div>
		}
	</section>
}

templ GuestbookEntryForm() {
	<section class="container">
		<button class="btn btn-ghost close-dialog" hx-on="click: wga.closeDialog();">
			<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
				<path stroke-linecap="round" stroke-linejoin="round" d="M6 18 18 6M6 6l12 12"></path>
			</svg>
		</button>
		<h1 class="text-2xl mb-4">Leave an enty!</h1>
		<p>Leave your mark in the guestbook!</p>
		<p>Be kind and respectful to others.</p>
		<p>Messages are moderated and will be reviewed before being published.</p>
		<p class="mb-4">You can post your message anonymously if you prefer.</p>
		<form
			hx-post="/guestbook/add"
			enctype="multipart/form-data"
			hx-target="#d"
			hx-disabled-elt="input,button,select"
		>
			<div class="flex flex-col gap-6 mb-6">
				<input
					type="text"
					class="input input-bordered w-full "
					placeholder="Your name"
					name="sender_name"
					autocomplete="name"
					id="sender_name"
				/>
				<input
					type="email"
					class="input input-bordered w-full "
					placeholder="Your email"
					name="sender_email"
					autocomplete="email"
					id="sender_email"
				/>
				<input
					type="text"
					class="input input-bordered w-full "
					placeholder="Your location"
					name="location"
					autocomplete="location"
				/>
				<textarea class="textarea textarea-bordered" id="message" name="message" placeholder="Your entry"></textarea>
			</div>
			<label aria-hidden="true" class="hpt" for="name"></label>
			<input
				aria-hidden="true"
				class="hpt"
				autocomplete="off"
				type="text"
				id="name"
				name="name"
				placeholder="Enter your name"
			/>
			<label aria-hidden="true" class="hpt" for="email"></label>
			<input
				aria-hidden="true"
				class="hpt"
				autocomplete="off"
				type="email"
				id="email"
				name="email"
				placeholder="Enter your email"
			/>
			<div class="flex flex-row justify-end gap-4">
				<button class="btn btn-primary" type="submit">
					Leave entry
				</button>
				<button type="button" class="btn btn-neutral" hx-on="click: wga.closeDialog();">
					Cancel
				</button>
			</div>
		</form>
	</section>
}

templ GuestbookEntries(entries []*models.GuestbookEntry) {
	<div class="flow-root">
		<div class="divide-y divide-gray-200">
			for _, entry := range entries {
				@GuestbookEntry(entry)
			}
		</div>
	</div>
}

templ GuestbookEntry(entry *models.GuestbookEntry) {
	if (entry.Message == "") {
		return
	}
	<div class="py-12">
		<div class="flex items-center">
			<figure class="h-12 w-12 rounded-full">
				if entry.Email != "" {
					<img class="" src={ genGravatarUrl(entry.Email) }/>
				} else {
					<img class="" src="https://www.gravatar.com/avatar/00000000000000000000000000000000?d=mp&f=y&size=128"/>
				}
			</figure>
			<div class="ml-4">
				<h4 class="text-sm font-bold">
					if entry.Name != "" {
						{ entry.Name }
					} else {
						Anonymous
					}
				</h4>
				<div class="flex flex-row items-center mt-2">
					if entry.Location != "" {
						<div class="badge badge-neutral mr-4">{ entry.Location }</div>
					}
					<div class="badge badge-neutral">{ entry.Created }</div>
				</div>
			</div>
		</div>
		<div class="mt-4 space-y-6 text-base italic">
			@templ.Raw(entry.Message)
		</div>
	</div>
}

func genMd5(email string) string {
	hash := md5.New()
	hash.Write([]byte(email))
	return fmt.Sprintf("%x", hash.Sum(nil))
}

func urlEncode(s string) string {
	return s
}

func genGravatarUrl(email string) string {
	return "https://www.gravatar.com/avatar/" + genMd5(email) + "?d=identicon&size=128"
}
